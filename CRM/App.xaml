<Application x:Class="SteinbachCRM.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SteinbachCRM"
            
             Startup="Application_Startup" >
    <!--StartupUri="Views\Navigation.xaml"-->
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary>
                    <local:AppBootstrapper x:Key="bootstrapper" />
                </ResourceDictionary>
                <ResourceDictionary
                  Source="Resources/ExpanderDictionary.xaml">
                    
                </ResourceDictionary>
                <ResourceDictionary
                  Source="Resources/CheckBoxListBoxDictionary.xaml">
                    
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <LinearGradientBrush x:Key="SubtleBlue" EndPoint="0.476,-0.09" StartPoint="0.476,1.363">
                <GradientStop Color="#FF7A8EEC" Offset="0.013"/>
                <GradientStop Color="#FF6B93CC" Offset="1"/>
                <GradientStop Color="#FFF7F6F7" Offset="0.54"/>
                <GradientStop Color="#FFEDEEF4" Offset="0.46"/>
            </LinearGradientBrush>
            
            <Style x:Key="BlueBorder" TargetType="Border">
                <Setter Property="BorderBrush" Value="#FF6B93CC" />
                <Setter Property="BorderThickness" Value="4"/>
                <Setter Property="CornerRadius" Value="2"/>
                <Setter Property="Padding" Value="2"/>
            </Style>
            <Style x:Key="PlusImage" TargetType="Image">
                <Setter Property="Source" Value="/Images/plus.png"/>
            </Style>
            <Style x:Key="DeleteImage" TargetType="Image">
                <Setter Property="Source" Value="/Images/del.png"/>
            </Style>
            <Style x:Key="ColHeaderText" TargetType="TextBlock">
                <Setter Property="FontSize" Value="14" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Background" Value="{StaticResource SubtleBlue}" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Padding" Value="2" />
            </Style>
            <Style TargetType="Button" x:Key="PlusButton">
                <Setter Property="Width" Value="15"/>
                <Setter Property="Height" Value="15"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="10,4"/>
                <Setter Property="Background" Value="Lavender"/>
                <Setter Property="ToolTip" Value="Element hinzufügen"/>
                
            </Style>
            
            <Style TargetType="Button" x:Key="DeleteButton">
                <Setter Property="Width" Value="15"/>
                <Setter Property="Height" Value="15"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="10,4"/>
                <Setter Property="Background" Value="Lavender"/>
                <Setter Property="ToolTip" Value="Element entfernen"/>
            </Style>
            
            <Style TargetType="Button" x:Key="ImageButton">
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="10,10"/>
                <Setter Property="Background" Value="Lavender"/>
            </Style>
            <Style TargetType="Button" x:Key="ImageButtonMedium">
                <Setter Property="Width" Value="30"/>
                <Setter Property="Height" Value="30"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="10,10"/>
                <Setter Property="Background" Value="Lavender"/>
            </Style>
            <Style TargetType="Button" x:Key="ImageButtonGrid">
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="15,0,0,0"/>
                <Setter Property="Background" Value="Lavender"/>
            </Style>
            <Style TargetType="Button" x:Key="StandardButton">
                <Setter Property="Width" Value="120"/>
                <Setter Property="Height" Value="25"/>
                <!--<Setter Property="Background" Value="LemonChiffon"></Setter>-->
                <Setter Property="Background" Value="{StaticResource SubtleBlue}"/>
                <Setter Property="Foreground" Value="MidnightBlue"/>
                <Setter Property="HorizontalAlignment" Value="Left"/>
                <Setter Property="Margin" Value="10,10"/>
            </Style>
            <Style TargetType="RadioButton" x:Key="StandardRadioButton">
                <Setter Property="Background" Value="{StaticResource SubtleBlue}"/>
                
                <Setter Property="Margin" Value="3"/>
            </Style>
                <Style TargetType="GridViewColumnHeader" x:Key="hiddenStyle">
                <Setter Property="Visibility" Value="Collapsed" />
            </Style>
            
            <!--<Style TargetType="Border">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="LightBlue"/>
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="Margin" Value="1,1"/>
            </Style>-->
            
            <Style TargetType="Border" x:Key="StandardBorder">
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="BorderBrush" Value="LightGray"/>
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="Margin" Value="5,5"/>
            </Style>
            
            
            <!--<Style TargetType="{x:Type Expander}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Expander}">
                            <Grid>
                                <Border Name="tabExpander" Background="#FF282828" BorderBrush="#FF282828" BorderThickness="1,1,1,0" CornerRadius="6,6,0,0" Padding="8,4,8,2" >
                                    <StackPanel Orientation="Horizontal">
                                    <TextBlock Name="ExpanderForeground" Foreground="LightGray"  VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <ContentPresenter ContentSource="Header" /></TextBlock>
                                        <Button Style="{StaticResource PlusButton}" >
                                            <Image Style="{StaticResource PlusImage}"/>
                                        </Button>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>-->
            
            
            <!--Modify TabControl to have the same look and feel as DisplayArea-->
            <Style TargetType="{x:Type TabControl}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel Grid.Row="0" IsItemsHost="True" Background="Transparent" />
                                <Border Name="ContentPanel" Grid.Row="1" Background="White" BorderBrush="#FF282828" CornerRadius="0,6,6,6" BorderThickness="4">
                                    <Border.RenderTransform>
                                        <ScaleTransform x:Name="TabItemScale" ScaleX="1" ScaleY="1" />
                                    </Border.RenderTransform>
                                    <ContentPresenter ContentSource="SelectedContent" />
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="TabControl.Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="TabItemScale" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="0.0" BeginTime="0:0:0" Duration="0:0:0" AutoReverse="False"/>
                                            <DoubleAnimation Storyboard.TargetName="TabItemScale" Storyboard.TargetProperty="(ScaleTransform.ScaleY)" To="1.0" BeginTime="0:0:0.2" Duration="0:0:1" AutoReverse="False"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TabItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Grid>
                                <Border Name="tabBorder" Background="#FF282828" BorderBrush="#FF282828" BorderThickness="1,1,1,0" CornerRadius="6,6,0,0" Padding="8,4,8,2" >
                                    <TextBlock Name="tabForeground" Foreground="LightGray"  VerticalAlignment="Center" HorizontalAlignment="Center" Width="120">
                                    <ContentPresenter ContentSource="Header" /></TextBlock>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="tabBorder" Property="Background" Value="#FF282828" />
                                    <Setter TargetName="tabForeground" Property="Foreground" Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="False">
                                    <Setter TargetName="tabBorder" Property="Background" Value="LightGray" />
                                    <Setter TargetName="tabForeground" Property="Foreground" Value="#FF282828" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--Custom glossy button-->
            <LinearGradientBrush x:Key="GreenGloss" StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#FF00E30A" Offset="0"/>
                <GradientStop Color="#FF039309" Offset="0.45"/>
                <GradientStop Color="#FF026B07" Offset="0.55"/>
                <GradientStop Color="#FF005003" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="GreenGlossHover" StartPoint="0,0" EndPoint="0,1" >
                <GradientStop Color="#FF00FB0B" Offset="0"/>
                <GradientStop Color="#FF029B08" Offset="0.45"/>
                <GradientStop Color="#FF007D05" Offset="0.55"/>
                <GradientStop Color="#FF006204" Offset="1"/>
            </LinearGradientBrush>
            <Style x:Key="GlossyButton" TargetType="Button">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Foreground" Value="#FFFFFFFF" />
                <Setter Property="Background" Value="{StaticResource GreenGloss}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border BorderThickness="1" CornerRadius="6" BorderBrush="#FE464646">
                                <Border Name="buttonBorder" BorderThickness="1" CornerRadius="4" BorderBrush="DarkGray">
                                    <Border BorderThickness="1" BorderBrush="#FE464646" CornerRadius="3">
                                        <Border BorderThickness="1" BorderBrush="#FF009B06" CornerRadius="2" Background="{TemplateBinding Background}">
                                            <Grid>
                                                <ContentPresenter Name="buttonContent" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Grid>
                                        </Border>
                                    </Border>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{StaticResource GreenGlossHover}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#FF006204" />
                                    <Setter TargetName="buttonContent" Property="RenderTransform" >
                                        <Setter.Value>
                                            <TranslateTransform Y="1.0" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsDefaulted" Value="True">
                                    <Setter TargetName="buttonBorder" Property="BorderBrush" Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="buttonBorder" Property="BorderBrush" Value="LightGray" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="buttonBorder" Property="Opacity" Value="0.75" />
                                    <Setter Property="Foreground" Value="LightGray" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
